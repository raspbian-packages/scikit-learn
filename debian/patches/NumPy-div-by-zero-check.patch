From: Christian Kastner <ckk@debian.org>
Date: Thu, 30 Jul 2020 16:58:06 +0200
Subject: NumPy div-by-zero check

Skip some tests where NumPy does not report FP division-by-zero, which
has been observed on armel (soft-float).

This is not a bug in NumPy, but rather originates with the underlying
platform. See also
 * https://lists.debian.org/debian-arm/2020/02/msg00076.html.
 * https://github.com/numpy/numpy/issues/15562
---
 sklearn/feature_extraction/tests/test_text.py | 8 ++++++++
 sklearn/metrics/tests/test_classification.py  | 7 +++++++
 sklearn/metrics/tests/test_ranking.py         | 6 ++++++
 3 files changed, 21 insertions(+)

Index: scikit-learn/sklearn/feature_extraction/tests/test_text.py
===================================================================
--- scikit-learn.orig/sklearn/feature_extraction/tests/test_text.py	2021-11-27 10:10:51.351463143 +0100
+++ scikit-learn/sklearn/feature_extraction/tests/test_text.py	2021-11-27 10:10:51.347462899 +0100
@@ -1,6 +1,7 @@
 # -*- coding: utf-8 -*-
 from collections.abc import Mapping
 import re
+import warnings
 
 import pytest
 from scipy import sparse
@@ -75,6 +76,12 @@
     return ["the_ultimate_feature"]
 
 
+# This has been observed on 32-bit ARM with soft float, for example
+with warnings.catch_warnings(record=True) as w:
+    1. / np.array([0.])
+    numpy_lacks_div0_warning = len(w) == 0
+
+
 def test_strip_accents():
     # check some classical latin accentuated symbols
     a = "àáâãäåçèéêë"
@@ -482,6 +489,7 @@
     assert (tfidf >= 0).all()
 
 
+@pytest.mark.skipif(numpy_lacks_div0_warning, reason='No div_by_zero warning')
 def test_tfidf_no_smoothing():
     X = [[1, 1, 1], [1, 1, 0], [1, 0, 0]]
     tr = TfidfTransformer(smooth_idf=False, norm="l2")
Index: scikit-learn/sklearn/metrics/tests/test_classification.py
===================================================================
--- scikit-learn.orig/sklearn/metrics/tests/test_classification.py	2021-11-27 10:10:51.351463143 +0100
+++ scikit-learn/sklearn/metrics/tests/test_classification.py	2021-11-27 10:10:51.347462899 +0100
@@ -96,6 +96,12 @@
     return y_true, y_pred, probas_pred
 
 
+# This has been observed on 32-bit ARM with soft float, for example
+with warnings.catch_warnings(record=True) as w:
+    1. / np.array([0.])
+    numpy_lacks_div0_warning = len(w) == 0
+
+
 ###############################################################################
 # Tests
 
@@ -719,6 +725,7 @@
         assert_almost_equal(matthews_corrcoef(y_1, y_2, sample_weight=mask), 0.0)
 
 
+@pytest.mark.skipif(numpy_lacks_div0_warning, reason='No div_by_zero warning')
 def test_matthews_corrcoef_multiclass():
     rng = np.random.RandomState(0)
     ord_a = ord("a")
Index: scikit-learn/sklearn/metrics/tests/test_ranking.py
===================================================================
--- scikit-learn.orig/sklearn/metrics/tests/test_ranking.py	2021-11-27 10:10:51.351463143 +0100
+++ scikit-learn/sklearn/metrics/tests/test_ranking.py	2021-11-27 10:10:51.351463143 +0100
@@ -90,6 +90,11 @@
     y_true = y[half:]
     return y_true, y_pred, y_score
 
+# This has been observed on 32-bit ARM with soft float, for example
+with warnings.catch_warnings(record=True) as w:
+    1. / np.array([0.])
+    numpy_lacks_div0_warning = len(w) == 0
+
 
 ###############################################################################
 # Tests
@@ -857,6 +862,7 @@
     assert p.size == thresholds.size + 1
 
 
+@pytest.mark.skipif(numpy_lacks_div0_warning, reason='No div_by_zero warning')
 def test_precision_recall_curve_toydata():
     with np.errstate(all="raise"):
         # Binary classification
